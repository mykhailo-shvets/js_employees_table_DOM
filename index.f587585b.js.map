{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAc,SAAS,aAAa,CAAC,YACrC,EAAY,SAAS,aAAa,CAAC,SACnC,EAAU,CACd,QACA,YACA,SACA,WACA,YACA,gBACD,CAED,EAAM,kBAAkB,CACtB,WACA,8XAW2B,MAAA,CAAnB,IAAmB,sRAc7B,IAAM,EAAO,SAAS,aAAa,CAAC,sBAEhC,EAAiB,KAErB,SAAS,EAAY,CAAC,CAAE,CAAC,SACvB,AAAI,EAAE,QAAQ,CAAC,KACN,EAAE,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,IAAM,EAAE,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,IAG3D,CAAC,EACI,EAAI,EAGN,EAAE,aAAa,CAAC,EACzB,CAEA,EAAY,gBAAgB,CAAC,QAAS,SAAC,CAAvC,EACE,IAAM,EAAc,EAAI,EAAY,QAAQ,EAAE,SAAS,CACrD,SAAC,CADH,EACU,OAAA,IAAO,EAAE,MAAM,A,GAGzB,GAAI,IAAmB,EAAE,MAAM,CAAE,CAC/B,IAAM,EAAO,EAAG,EAAU,QAAQ,EAAE,IAAI,CAAC,SAAC,CAAA,CAAG,CAA7C,EAIE,OAAO,EAHO,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,CACrC,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,CAGjD,GAEA,AAAA,EAAU,MAAM,CAAhB,KAAA,CAAA,EAAiB,EAAG,IACpB,EAAiB,EAAE,MAAM,CAEzB,MACF,CAEA,GAAI,IAAmB,EAAE,MAAM,CAAE,CAC/B,IAAM,EAAQ,EAAG,EAAU,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableHeader = document.querySelector(\"thead tr\");\nvar tableBody = document.querySelector(\"tbody\");\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinboorg\",\n    \"San Francisco\"\n];\ntable.insertAdjacentHTML(\"afterend\", '\\n  <form method=\"/\" action=\"GET\" class= \"new-employee-form\">\\n    <label>Name:\\n      <input name=\"name\" type=\"text\" data-qa=\"name\">\\n    </label>\\n    <label>Position:\\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\\n    </label>\\n    <label>Office:\\n      <select name=\"office\" type=\"text\" data-qa=\"office\">\\n        <option selected disabled></option>\\n        '.concat(createSelectList(), '\\n      </select>\\n    </label>\\n    <label>Age:\\n      <input name=\"age\" type=\"number\" data-qa=\"age\">\\n    </label>\\n    <label>Salary:\\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\">\\n    </label>\\n    <button type=\"submit\">Save to table</button>\\n  </form>\\n'));\nvar form = document.querySelector(\".new-employee-form\");\nvar isSortedColumn = null;\nfunction sortColumns(a, b) {\n    if (a.includes(\"$\")) return a.slice(1).replace(\",\", \"\") - b.slice(1).replace(\",\", \"\");\n    if (+a) return a - b;\n    return a.localeCompare(b);\n}\ntableHeader.addEventListener(\"click\", function(e) {\n    var indexColumn = _to_consumable_array(tableHeader.children).findIndex(function(el) {\n        return el === e.target;\n    });\n    if (isSortedColumn !== e.target) {\n        var _tableBody;\n        var ASC = _to_consumable_array(tableBody.children).sort(function(a, b) {\n            var start = a.children[indexColumn].textContent;\n            var end = b.children[indexColumn].textContent;\n            return sortColumns(start, end);\n        });\n        (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(ASC));\n        isSortedColumn = e.target;\n        return;\n    }\n    if (isSortedColumn === e.target) {\n        var _tableBody1;\n        var DESC = _to_consumable_array(tableBody.children).sort(function(a, b) {\n            var start = a.children[indexColumn].textContent;\n            var end = b.children[indexColumn].textContent;\n            return sortColumns(end, start);\n        });\n        (_tableBody1 = tableBody).append.apply(_tableBody1, _to_consumable_array(DESC));\n        isSortedColumn = null;\n    }\n});\nvar previosTargetRow = null;\ntableBody.addEventListener(\"click\", function(e) {\n    var selectedRow = e.target.closest(\"tr\");\n    if (previosTargetRow) previosTargetRow.classList.remove(\"active\");\n    if (previosTargetRow === selectedRow) {\n        previosTargetRow.classList.remove(\"active\");\n        previosTargetRow = null;\n        return;\n    }\n    previosTargetRow = selectedRow;\n    selectedRow.classList.add(\"active\");\n});\nfunction createSelectList() {\n    return \"\".concat(offices.map(function(office) {\n        return \"<option>\".concat(office, \"</option>\");\n    }).join(\"\"));\n}\nfunction convertSalary(salary) {\n    return \"$\".concat((+salary).toLocaleString(\"en-US\"));\n}\nfunction validData(key, value, data) {\n    if (key === \"name\") {\n        if (value.trim().length < 4) return pushNotification(450, \"error\", 'The \"Name\" must contain more 4 letters', \"error\");\n        if (_to_consumable_array(value).find(function(x) {\n            return x.toUpperCase() === x.toLowerCase() && x !== \" \";\n        })) return pushNotification(450, \"error\", 'Invalid data, please use name in \"Name\" field', \"error\");\n    }\n    if (key === \"position\") {\n        if (value.trim().length === 0) return pushNotification(450, \"error\", 'The \"Possition\" is empty', \"error\");\n        if (_to_consumable_array(value).find(function(x) {\n            return x.toUpperCase() === x.toLowerCase() && x !== \" \";\n        })) return pushNotification(450, \"error\", 'Invalid data, please use letters in \"Position\" field', \"error\");\n    }\n    if (data !== undefined) {\n        if (!(\"office\" in data)) {\n            if (value.length === 0) return pushNotification(450, \"error\", 'The \"Office\" is not selected', \"error\");\n        }\n    }\n    if (key === \"age\") {\n        if (value < 18 || value > 90) return pushNotification(450, \"error\", \"The age must be more than 18, and less than 90\", \"error\");\n    }\n    if (key === \"salary\") {\n        if (+value.slice(1) <= 0) return pushNotification(450, \"error\", 'The \"Salary\" is empty', \"error\");\n    }\n    return true;\n}\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var newEmployee = document.createElement(\"tr\");\n    var data = new FormData(form);\n    var formValues = Object.fromEntries(data.entries());\n    formValues.salary = convertSalary(formValues.salary);\n    var values = _to_consumable_array(Object.values(formValues));\n    for(var key in formValues){\n        if (validData(key, formValues[key], formValues) !== true) return;\n    }\n    newEmployee.innerHTML = \"\".concat(values.map(function(value) {\n        return \"<td>\".concat(value.trim(), \"</td>\");\n    }).join(\"\"));\n    tableBody.append(newEmployee);\n    pushNotification(10, \"success\", \"The data has been added successfully\", \"success\");\n    form.reset();\n});\nfunction pushNotification(posTop, title, description, type) {\n    if (document.body.contains(document.querySelector(\".notification\"))) document.querySelector(\".notification\").remove();\n    var notification = document.createElement(\"div\");\n    var heading = document.createElement(\"h2\");\n    var message = document.createElement(\"p\");\n    notification.classList.add(\"notification\", type);\n    notification.dataset.qa = \"notification\";\n    heading.classList.add(\"title\");\n    heading.textContent = title;\n    message.textContent = description;\n    notification.append(heading);\n    notification.append(message);\n    document.body.append(notification);\n    notification.style.top = \"\".concat(posTop, \"px\");\n    setTimeout(function() {\n        notification.remove();\n    }, 5000);\n}\nvar nameColumn = {\n    0: \"name\",\n    1: \"position\",\n    2: \"office\",\n    3: \"age\",\n    4: \"salary\"\n};\ntableBody.addEventListener(\"dblclick\", function(e) {\n    if (document.querySelector(\".cell-input\")) return;\n    var selectedCell = e.target.closest(\"td\");\n    var textCell = selectedCell.textContent;\n    selectedCell.textContent = \"\";\n    var findIndex = _to_consumable_array(e.target.closest(\"tr\").children).findIndex(function(x) {\n        return x === e.target.closest(\"td\");\n    });\n    if (findIndex === 2) {\n        var select = document.createElement(\"select\");\n        select.classList.add(\"cell-input\");\n        selectedCell.append(select);\n        select.innerHTML = \"\".concat(createSelectList());\n        select.addEventListener(\"blur\", function() {\n            selectedCell.textContent = select.value;\n        });\n        select.addEventListener(\"keydown\", function(ev) {\n            if (ev.code === \"Enter\") select.blur();\n        });\n    } else {\n        var input = document.createElement(\"input\");\n        input.classList.add(\"cell-input\");\n        selectedCell.append(input);\n        input.focus();\n        if (findIndex > 2) input.type = \"number\";\n        input.addEventListener(\"blur\", function() {\n            var text = input.value.trim();\n            if (findIndex === 4) text = convertSalary(text);\n            if (validData(nameColumn[findIndex], text) !== true) {\n                selectedCell.textContent = textCell;\n                return;\n            }\n            selectedCell.textContent = text;\n            pushNotification(10, \"success\", \"The data has been successfully changed\", \"success\");\n        });\n        input.addEventListener(\"keydown\", function(ev) {\n            if (ev.code === \"Enter\") input.blur();\n        });\n    }\n});\n\n//# sourceMappingURL=index.f587585b.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tableHeader = document.querySelector('thead tr');\nconst tableBody = document.querySelector('tbody');\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinboorg',\n  'San Francisco',\n];\n\ntable.insertAdjacentHTML(\n  'afterend',\n  `\n  <form method=\"/\" action=\"GET\" class= \"new-employee-form\">\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\">\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n    <label>Office:\n      <select name=\"office\" type=\"text\" data-qa=\"office\">\n        <option selected disabled></option>\n        ${createSelectList()}\n      </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\">\n    </label>\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`,\n);\n\nconst form = document.querySelector('.new-employee-form');\n\nlet isSortedColumn = null;\n\nfunction sortColumns(a, b) {\n  if (a.includes('$')) {\n    return a.slice(1).replace(',', '') - b.slice(1).replace(',', '');\n  }\n\n  if (+a) {\n    return a - b;\n  }\n\n  return a.localeCompare(b);\n}\n\ntableHeader.addEventListener('click', (e) => {\n  const indexColumn = [...tableHeader.children].findIndex(\n    (el) => el === e.target,\n  );\n\n  if (isSortedColumn !== e.target) {\n    const ASC = [...tableBody.children].sort((a, b) => {\n      const start = a.children[indexColumn].textContent;\n      const end = b.children[indexColumn].textContent;\n\n      return sortColumns(start, end);\n    });\n\n    tableBody.append(...ASC);\n    isSortedColumn = e.target;\n\n    return;\n  }\n\n  if (isSortedColumn === e.target) {\n    const DESC = [...tableBody.children].sort((a, b) => {\n      const start = a.children[indexColumn].textContent;\n      const end = b.children[indexColumn].textContent;\n\n      return sortColumns(end, start);\n    });\n\n    tableBody.append(...DESC);\n    isSortedColumn = null;\n  }\n});\n\nlet previosTargetRow = null;\n\ntableBody.addEventListener('click', (e) => {\n  const selectedRow = e.target.closest('tr');\n\n  if (previosTargetRow) {\n    previosTargetRow.classList.remove('active');\n  }\n\n  if (previosTargetRow === selectedRow) {\n    previosTargetRow.classList.remove('active');\n    previosTargetRow = null;\n\n    return;\n  }\n\n  previosTargetRow = selectedRow;\n\n  selectedRow.classList.add('active');\n});\n\nfunction createSelectList() {\n  return `${offices.map((office) => `<option>${office}</option>`).join('')}`;\n}\n\nfunction convertSalary(salary) {\n  return `$${(+salary).toLocaleString('en-US')}`;\n}\n\nfunction validData(key, value, data) {\n  if (key === 'name') {\n    if (value.trim().length < 4) {\n      return pushNotification(\n        450,\n        'error',\n        'The \"Name\" must contain more 4 letters',\n        'error',\n      );\n    }\n\n    if (\n      [...value].find((x) => x.toUpperCase() === x.toLowerCase() && x !== ' ')\n    ) {\n      return pushNotification(\n        450,\n        'error',\n        'Invalid data, please use name in \"Name\" field',\n        'error',\n      );\n    }\n  }\n\n  if (key === 'position') {\n    if (value.trim().length === 0) {\n      return pushNotification(\n        450,\n        'error',\n        'The \"Possition\" is empty',\n        'error',\n      );\n    }\n\n    if (\n      [...value].find((x) => x.toUpperCase() === x.toLowerCase() && x !== ' ')\n    ) {\n      return pushNotification(\n        450,\n        'error',\n        'Invalid data, please use letters in \"Position\" field',\n        'error',\n      );\n    }\n  }\n\n  if (data !== undefined) {\n    if (!('office' in data)) {\n      if (value.length === 0) {\n        return pushNotification(\n          450,\n          'error',\n          'The \"Office\" is not selected',\n          'error',\n        );\n      }\n    }\n  }\n\n  if (key === 'age') {\n    if (value < 18 || value > 90) {\n      return pushNotification(\n        450,\n        'error',\n        'The age must be more than 18, and less than 90',\n        'error',\n      );\n    }\n  }\n\n  if (key === 'salary') {\n    if (+value.slice(1) <= 0) {\n      return pushNotification(450, 'error', 'The \"Salary\" is empty', 'error');\n    }\n  }\n\n  return true;\n}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const newEmployee = document.createElement('tr');\n  const data = new FormData(form);\n  const formValues = Object.fromEntries(data.entries());\n\n  formValues.salary = convertSalary(formValues.salary);\n\n  const values = [...Object.values(formValues)];\n\n  for (const key in formValues) {\n    if (validData(key, formValues[key], formValues) !== true) {\n      return;\n    }\n  }\n\n  newEmployee.innerHTML = `${values.map((value) => `<td>${value.trim()}</td>`).join('')}`;\n\n  tableBody.append(newEmployee);\n\n  pushNotification(\n    10,\n    'success',\n    'The data has been added successfully',\n    'success',\n  );\n\n  form.reset();\n});\n\nfunction pushNotification(posTop, title, description, type) {\n  if (document.body.contains(document.querySelector('.notification'))) {\n    document.querySelector('.notification').remove();\n  }\n\n  const notification = document.createElement('div');\n  const heading = document.createElement('h2');\n  const message = document.createElement('p');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n  heading.classList.add('title');\n\n  heading.textContent = title;\n  message.textContent = description;\n\n  notification.append(heading);\n  notification.append(message);\n  document.body.append(notification);\n\n  notification.style.top = `${posTop}px`;\n\n  setTimeout(() => {\n    notification.remove();\n  }, 5000);\n}\n\nconst nameColumn = {\n  0: 'name',\n  1: 'position',\n  2: 'office',\n  3: 'age',\n  4: 'salary',\n};\n\ntableBody.addEventListener('dblclick', (e) => {\n  if (document.querySelector('.cell-input')) {\n    return;\n  }\n\n  const selectedCell = e.target.closest('td');\n  const textCell = selectedCell.textContent;\n\n  selectedCell.textContent = '';\n\n  const findIndex = [...e.target.closest('tr').children].findIndex(\n    (x) => x === e.target.closest('td'),\n  );\n\n  if (findIndex === 2) {\n    const select = document.createElement('select');\n\n    select.classList.add('cell-input');\n    selectedCell.append(select);\n\n    select.innerHTML = `${createSelectList()}`;\n\n    select.addEventListener('blur', () => {\n      selectedCell.textContent = select.value;\n    });\n\n    select.addEventListener('keydown', (ev) => {\n      if (ev.code === 'Enter') {\n        select.blur();\n      }\n    });\n  } else {\n    const input = document.createElement('input');\n\n    input.classList.add('cell-input');\n    selectedCell.append(input);\n    input.focus();\n\n    if (findIndex > 2) {\n      input.type = 'number';\n    }\n\n    input.addEventListener('blur', () => {\n      let text = input.value.trim();\n\n      if (findIndex === 4) {\n        text = convertSalary(text);\n      }\n\n      if (validData(nameColumn[findIndex], text) !== true) {\n        selectedCell.textContent = textCell;\n\n        return;\n      }\n\n      selectedCell.textContent = text;\n\n      pushNotification(\n        10,\n        'success',\n        'The data has been successfully changed',\n        'success',\n      );\n    });\n\n    input.addEventListener('keydown', (ev) => {\n      if (ev.code === 'Enter') {\n        input.blur();\n      }\n    });\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","tableHeader","tableBody","offices","insertAdjacentHTML","concat","createSelectList","form","isSortedColumn","sortColumns","a","b","includes","replace","localeCompare","addEventListener","e","indexColumn","children","findIndex","el","target","ASC","sort","textContent","append","apply","DESC","start","previosTargetRow","map","office","join","convertSalary","salary","toLocaleString","validData","key","value","data","trim","pushNotification","find","x","toUpperCase","toLowerCase","undefined","posTop","title","description","type","body","contains","remove","notification","createElement","heading","message","classList","add","dataset","qa","style","top","setTimeout","selectedRow","closest","preventDefault","newEmployee","formValues","fromEntries","FormData","entries","values","innerHTML","reset","nameColumn","selectedCell","textCell","select","ev","code","blur","input","focus","text"],"version":3,"file":"index.f587585b.js.map"}